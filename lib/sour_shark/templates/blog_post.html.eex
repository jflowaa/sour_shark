<div class="flex justify-center">
  <div class="w-full max-w-3xl px-4 sm:px-6 lg:px-8">
    <div id="table-of-contents" class="my-6"></div>
    <article
      id="blog-article"
      class="prose max-w-none leading-relaxed prose-headings:font-semibold prose-headings:tracking-tight prose-img:rounded-xl prose-pre:shadow prose-pre:!bg-base-200 prose-pre:!p-4 prose-pre:rounded-box prose-blockquote:border-l-4 prose-blockquote:border-primary prose-blockquote:italic prose-a:link">
      <%= @post_body %>
    </article>
  </div>
</div>
<style>
  #blog-article h1 { font-size: clamp(2.5rem, 5vw, 3.25rem); line-height:1.15; margin-top:3rem; margin-bottom:1.5rem; }
  #blog-article h2 { font-size: clamp(2rem, 4vw, 2.5rem); line-height:1.2; margin-top:2.75rem; margin-bottom:1.25rem; }
  #blog-article h3 { font-size: clamp(1.5rem, 3vw, 2rem); line-height:1.3; margin-top:2.25rem; margin-bottom:1rem; }
  #blog-article h4 { font-size: clamp(1.25rem, 2.5vw,1.5rem); line-height:1.35; margin-top:2rem; margin-bottom:0.75rem; }
  #blog-article h5 { font-size:1.125rem; line-height:1.4; margin-top:1.75rem; margin-bottom:0.5rem; }
  #blog-article h6 { font-size:1rem; line-height:1.4; margin-top:1.5rem; margin-bottom:0.5rem; }
  .hide-path-line span.__path_label_removed { display:none; }
  /* Force list markers & indentation (overrides DaisyUI reset that hides bullets) */
  #blog-article ul, #blog-article ol { list-style-position: outside; margin-top:1.25em; margin-bottom:1.25em; padding-left:1.5rem; }
  #blog-article ul { list-style-type: disc; }
  #blog-article ol { list-style-type: decimal; }
  #blog-article ul ul { list-style-type: circle; margin-top:0.75em; margin-bottom:0.75em; }
  #blog-article ol ul, #blog-article ul ol, #blog-article ol ol { margin-top:0.75em; margin-bottom:0.75em; }
  #blog-article li { margin-top:0.25em; margin-bottom:0.25em; }
  #blog-article ul>li::marker { color: var(--tw-prose-bullets); }
  #blog-article ol>li::marker { color: var(--tw-prose-counters); }
  /* Improve link visibility & accessibility */
  #blog-article a { color: hsl(var(--p, 221 83% 53%)); /* DaisyUI primary or fallback blue */ text-decoration: underline; text-underline-offset: 3px; text-decoration-thickness: 2px; font-weight: 500; transition: color .15s ease, background-color .15s ease, text-decoration-color .15s ease; }
  #blog-article a:hover, #blog-article a:focus-visible { color: hsl(var(--p, 221 83% 46%)); text-decoration-color: currentColor; }
  #blog-article a:visited { color: hsl(var(--p, 221 83% 53%)); opacity: .9; }
  #blog-article a:focus-visible { outline: 2px solid currentColor; outline-offset: 2px; border-radius: 2px; }
  #blog-article a code { color: inherit; }
  .prose-invert #blog-article a { color: hsl(var(--p, 217 91% 60%)); }
  .prose-invert #blog-article a:hover, .prose-invert #blog-article a:focus-visible { color: hsl(var(--p, 217 91% 70%)); }
  /* Do NOT restyle links that wrap entire headings (keep heading typography) */
  #blog-article h1>a, #blog-article h2>a, #blog-article h3>a, #blog-article h4>a, #blog-article h5>a, #blog-article h6>a {
    color: inherit !important;
    text-decoration: none !important;
    font-weight: inherit !important;
  }
  #blog-article h1>a:hover, #blog-article h2>a:hover, #blog-article h3>a:hover,
  #blog-article h4>a:hover, #blog-article h5>a:hover, #blog-article h6>a:hover {
    text-decoration: none;
  }
</style>
<script>
  (function() {
    function applyProseTheme() {
      const dark = document.documentElement.getAttribute('data-theme') === 'dark';
      const article = document.getElementById('blog-article');
      if (!article) return;
      article.classList.toggle('prose-invert', dark);
    }
    applyProseTheme();
    new MutationObserver(applyProseTheme).observe(document.documentElement, { attributes:true, attributeFilter:['data-theme'] });

    const THRESHOLD = 10;

    // Get label from first line if starts with `#`, HTML comment <!-- label -->, or // label
    function extractCodeBlockLabel(codeEl) {
      const raw = codeEl.textContent.replace(/\r/g,'');
      const lines = raw.split('\n');
      if (!lines.length) return null;
      const first = lines[0].trim();
      if (!first) return null;
      // HTML comment pattern: <!--\s*([!*~_A-Za-z0-9 .,\/\\:;#@(){}\-+\[\]|`'"?=&%]+)\s*-->$/ (allow optional surrounding asterisks inside)
      const htmlCommentMatch = first.match(/^<!--\s*([!*~_A-Za-z0-9 .,\/\\:;#@(){}\-+\[\]|`'"?=&%]+)\s*-->$/);
      if (htmlCommentMatch) {
        let inner = htmlCommentMatch[1].trim();
        // Strip leading/trailing asterisks commonly used for emphasis e.g. *Label*
        inner = inner.replace(/^\*+|\*+$/g,'').trim();
        return inner || null;
      }
      // Double-slash comment pattern: // label
      const slCommentMatch = first.match(/^\/\/\s*(.+)$/);
      if (slCommentMatch) {
        let inner = slCommentMatch[1].trim();
        inner = inner.replace(/^\*+|\*+$/g,'').trim();
        return inner || null;
      }
      const firstChar = first[0];
      if (firstChar == '#')
        return first.slice(1).trim();
      return null;
    }

    // Iterate code blocks
    document.querySelectorAll('#blog-article pre code').forEach(code => {
      let label = extractCodeBlockLabel(code);
      // Determine effective line count excluding path label line if present
      let text = code.textContent.replace(/\r/g,'');
      let lines = text.split('\n');
      let hasPathLine = false;
      if (label) {
        const first = lines[0].trim();
        if (/^(?:#|\/\/|--|;|%|<!--)\s*path:/i.test(first)) {
          hasPathLine = true;
          lines = lines.slice(1); // remove label line from counting & display (we won't mutate content to preserve highlight classes)
        }
      }
      const lineCount = lines.filter(l => l.length > 0 || !hasPathLine).length;

      const pre = code.parentElement;

      if (lineCount > THRESHOLD) {
        const details = document.createElement('details');
        details.className = 'mb-6 border border-base-300 rounded-box bg-base-100 open:shadow';
        const summary = document.createElement('summary');
        summary.className = 'cursor-pointer px-4 py-2 font-medium select-none bg-base-200 rounded-t-box';
        summary.textContent = `${label || 'Code block'} (${lineCount} lines)`;
        pre.replaceWith(details);
        details.appendChild(summary);
        pre.classList.add('mt-0','overflow-x-auto','p-0','bg-transparent','rounded-b-box');
        pre.style.margin = '0';
        code.classList.add('block','p-4','text-sm','leading-snug');
        details.appendChild(pre);
      }
    });
  })();
</script>
